// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: map.proto

package valorant

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MapName int32

const (
	MapName_SUNSET   MapName = 0
	MapName_LOTUS    MapName = 1
	MapName_PEARL    MapName = 2
	MapName_FRACTURE MapName = 3
	MapName_BREEZE   MapName = 4
	MapName_ICEBOX   MapName = 5
	MapName_ASCENT   MapName = 6
	MapName_SPLIT    MapName = 7
	MapName_HAVEN    MapName = 8
	MapName_BIND     MapName = 9
)

// Enum value maps for MapName.
var (
	MapName_name = map[int32]string{
		0: "SUNSET",
		1: "LOTUS",
		2: "PEARL",
		3: "FRACTURE",
		4: "BREEZE",
		5: "ICEBOX",
		6: "ASCENT",
		7: "SPLIT",
		8: "HAVEN",
		9: "BIND",
	}
	MapName_value = map[string]int32{
		"SUNSET":   0,
		"LOTUS":    1,
		"PEARL":    2,
		"FRACTURE": 3,
		"BREEZE":   4,
		"ICEBOX":   5,
		"ASCENT":   6,
		"SPLIT":    7,
		"HAVEN":    8,
		"BIND":     9,
	}
)

func (x MapName) Enum() *MapName {
	p := new(MapName)
	*p = x
	return p
}

func (x MapName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapName) Descriptor() protoreflect.EnumDescriptor {
	return file_map_proto_enumTypes[0].Descriptor()
}

func (MapName) Type() protoreflect.EnumType {
	return &file_map_proto_enumTypes[0]
}

func (x MapName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapName.Descriptor instead.
func (MapName) EnumDescriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{0}
}

type PlantSite int32

const (
	PlantSite_PLANT_SITE_A PlantSite = 0
	PlantSite_PLANT_SITE_B PlantSite = 1
	PlantSite_PLANT_SITE_C PlantSite = 2
)

// Enum value maps for PlantSite.
var (
	PlantSite_name = map[int32]string{
		0: "PLANT_SITE_A",
		1: "PLANT_SITE_B",
		2: "PLANT_SITE_C",
	}
	PlantSite_value = map[string]int32{
		"PLANT_SITE_A": 0,
		"PLANT_SITE_B": 1,
		"PLANT_SITE_C": 2,
	}
)

func (x PlantSite) Enum() *PlantSite {
	p := new(PlantSite)
	*p = x
	return p
}

func (x PlantSite) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlantSite) Descriptor() protoreflect.EnumDescriptor {
	return file_map_proto_enumTypes[1].Descriptor()
}

func (PlantSite) Type() protoreflect.EnumType {
	return &file_map_proto_enumTypes[1]
}

func (x PlantSite) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlantSite.Descriptor instead.
func (PlantSite) EnumDescriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{1}
}

type Map struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          MapName                `protobuf:"varint,1,opt,name=name,proto3,enum=MapName" json:"name,omitempty"`
	PlantSites    []PlantSite            `protobuf:"varint,2,rep,packed,name=plant_sites,json=plantSites,proto3,enum=PlantSite" json:"plant_sites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Map) Reset() {
	*x = Map{}
	mi := &file_map_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_map_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_map_proto_rawDescGZIP(), []int{0}
}

func (x *Map) GetName() MapName {
	if x != nil {
		return x.Name
	}
	return MapName_SUNSET
}

func (x *Map) GetPlantSites() []PlantSite {
	if x != nil {
		return x.PlantSites
	}
	return nil
}

var File_map_proto protoreflect.FileDescriptor

const file_map_proto_rawDesc = "" +
	"\n" +
	"\tmap.proto\"P\n" +
	"\x03Map\x12\x1c\n" +
	"\x04name\x18\x01 \x01(\x0e2\b.MapNameR\x04name\x12+\n" +
	"\vplant_sites\x18\x02 \x03(\x0e2\n" +
	".PlantSiteR\n" +
	"plantSites*}\n" +
	"\aMapName\x12\n" +
	"\n" +
	"\x06SUNSET\x10\x00\x12\t\n" +
	"\x05LOTUS\x10\x01\x12\t\n" +
	"\x05PEARL\x10\x02\x12\f\n" +
	"\bFRACTURE\x10\x03\x12\n" +
	"\n" +
	"\x06BREEZE\x10\x04\x12\n" +
	"\n" +
	"\x06ICEBOX\x10\x05\x12\n" +
	"\n" +
	"\x06ASCENT\x10\x06\x12\t\n" +
	"\x05SPLIT\x10\a\x12\t\n" +
	"\x05HAVEN\x10\b\x12\b\n" +
	"\x04BIND\x10\t*A\n" +
	"\tPlantSite\x12\x10\n" +
	"\fPLANT_SITE_A\x10\x00\x12\x10\n" +
	"\fPLANT_SITE_B\x10\x01\x12\x10\n" +
	"\fPLANT_SITE_C\x10\x02B$Z\"match-sim/internal/domain/valorantb\x06proto3"

var (
	file_map_proto_rawDescOnce sync.Once
	file_map_proto_rawDescData []byte
)

func file_map_proto_rawDescGZIP() []byte {
	file_map_proto_rawDescOnce.Do(func() {
		file_map_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_map_proto_rawDesc), len(file_map_proto_rawDesc)))
	})
	return file_map_proto_rawDescData
}

var file_map_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_map_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_map_proto_goTypes = []any{
	(MapName)(0),   // 0: MapName
	(PlantSite)(0), // 1: PlantSite
	(*Map)(nil),    // 2: Map
}
var file_map_proto_depIdxs = []int32{
	0, // 0: Map.name:type_name -> MapName
	1, // 1: Map.plant_sites:type_name -> PlantSite
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_map_proto_init() }
func file_map_proto_init() {
	if File_map_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_map_proto_rawDesc), len(file_map_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_map_proto_goTypes,
		DependencyIndexes: file_map_proto_depIdxs,
		EnumInfos:         file_map_proto_enumTypes,
		MessageInfos:      file_map_proto_msgTypes,
	}.Build()
	File_map_proto = out.File
	file_map_proto_goTypes = nil
	file_map_proto_depIdxs = nil
}
